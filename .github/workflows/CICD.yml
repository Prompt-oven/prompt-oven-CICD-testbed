name: Node.js CI/CD

on:
  push:
    branches: [ "main" ]
  pull_request:
    types: [closed, reopened]
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [ 20.x ]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
      
      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9.12.2
      
      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV
      
      - name: Cache pnpm modules
        uses: actions/cache@v4
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ matrix.node-version }}-${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ matrix.node-version }}-${{ runner.os }}-pnpm-store-
      
      - name: Install dependencies
        run: pnpm install
      
      - name: Build Application to Test
        run: pnpm turbo build
  
  deploy:
    runs-on: ubuntu-latest
    needs: build
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      - name: Docker login
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
      
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/prompt_oven_fe:latest
          cache-from: type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/prompt_oven_fe_testbed:buildcache
          cache-to: type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/prompt_oven_fe_testbed:buildcache,mode=max
      
      - name: Deploy to EC2
        uses: appleboy/ssh-action@v0.1.6
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ubuntu
          key: ${{ secrets.EC2_KEY }}
          timeout: 60s
          script: |
            echo "Stopping existing container..."
            sudo docker stop prompt_oven_fe || true
            sudo docker rm prompt_oven_fe || true
            
            echo "Pulling latest image..."
            sudo docker pull ${{ secrets.DOCKERHUB_USERNAME }}/prompt_oven_fe_testbed:latest
            
            echo "Running container..."
            sudo docker run -d --name prompt_oven_fe -p 3000:3000 -p 3001:3001 ${{ secrets.DOCKERHUB_USERNAME }}/prompt_oven_fe:latest
            
            echo "Cleaning up unused Docker images..."
            sudo docker image prune -f